// final code v1

// Load Wi-Fi library
#include <WiFi.h>
#include <Arduino.h>
#include <driver/ledc.h>

// Replace with your network credentials
const char* ssid     = "ESP32-Access-Point-1";
const char* password = "123456789";

// Set web server port number to 80
WiFiServer server(80);

// Variable to store the HTTP request
String header;


// Auxiliar variables to store the current output state
String unit1= "off";
String unit2= "off";
String unit3= "off";
String unit4= "off";

/ Assign output variables to GPIO pins

// Motor A
int output17 = 17; 
int output16 = 16; 
int enable1Pin = 4; 

// Motor B

int output18 = 18;
int output19 = 19;
int enable2Pin = 21;


// Motor C

int output14 = 14;
int output12 = 12;
int enable3Pin = 13;

// Motor D

int output27 = 27;
int output26 = 26;
int enable4Pin = 25;

// Setting PWM properties
const int freq = 30000;
const int pwmChannel = 0;
const int resolution = 8;
int dutyCycle = 200;

void setup() {
  Serial.begin(115200);
  // Initialize the output variables as outputs

  //MOTOR A
  pinMode(output17, OUTPUT);
  pinMode(output16, OUTPUT);
  pinMode(enable1Pin, OUTPUT);

  //MOTOR B
  pinMode(output18, OUTPUT);
  pinMode(output19, OUTPUT);
  pinMode(enable2Pin, OUTPUT);

  
  //MOTOR C
  pinMode(output14, OUTPUT);
  pinMode(output12, OUTPUT);
  pinMode(enable3Pin, OUTPUT);

  //MOTOR D
  pinMode(output27, OUTPUT);
  pinMode(output26, OUTPUT);
  pinMode(enable4Pin, OUTPUT);

  // Set outputs to LOW
  digitalWrite(output17, LOW);
  digitalWrite(output16, LOW);
  
  digitalWrite(output18, LOW);
  digitalWrite(output19, LOW);

  digitalWrite(output14, LOW);
  digitalWrite(output12, LOW);

  digitalWrite(output27, LOW);
  digitalWrite(output26, LOW);

  ledcAttachChannel(enable1Pin, freq, resolution, pwmChannel);
  ledcAttachChannel(enable2Pin, freq, resolution, pwmChannel);
  ledcAttachChannel(enable3Pin, freq, resolution, pwmChannel);
  ledcAttachChannel(enable4Pin, freq, resolution, pwmChannel);

    
  // Connect to Wi-Fi network with SSID and password
  Serial.print("Setting AP (Access Point)â€¦");
  // Remove the password parameter, if you want the AP (Access Point) to be open
  WiFi.softAP(ssid, password);

  IPAddress IP = WiFi.softAPIP();
  Serial.print("AP IP address: ");
  Serial.println(IP);
  
  server.begin();
}

void loop(){
  WiFiClient client = server.available();   // Listen for incoming clients

  if (client) {                             // If a new client connects,
    Serial.println("New Client.");          // print a message out in the serial port
    String currentLine = "";                // make a String to hold incoming data from the client
    while (client.connected()) {            // loop while the client's connected
      if (client.available()) {             // if there's bytes to read from the client,
        char c = client.read();             // read a byte, then
        Serial.write(c);                    // print it out the serial monitor
        header += c;
        if (c == '\n') {                    // if the byte is a newline character
          // if the current line is blank, you got two newline characters in a row.
          // that's the end of the client HTTP request, so send a response:
          if (currentLine.length() == 0) {
            // HTTP headers always start with a response code (e.g. HTTP/1.1 200 OK)
            // and a content-type so the client knows what's coming, then a blank line:
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println("Connection: close");
            client.println();

            // sequences & timings

            
            if (header.indexOf("GET /UNIT1/retrieve") >= 0) {
                Serial.println("Unit 1 Retrieving...");
                unit1 = "retrieve";
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc
              
              
            } else if (header.indexOf("GET /UNIT1/store") >= 0) {
                Serial.println("Unit 1 Storing...");
                unit1 = "store";
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc

            } else if (header.indexOf("GET /UNIT1/off") >= 0) {
                Serial.println("Unit 1 off");
                unit1 = "off"
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc

            } else if (header.indexOf("GET /UNIT2/retrieve") >= 0) {
                Serial.println("Unit 2 Retrieving...");
                unit2 = "retrieve";
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc;

            } else if (header.indexOf("GET /UNIT2/store") >= 0) {
                Serial.println("Unit 2 Storing...");
                unit2 = "store";
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc;
            
            } else if (header.indexOf("GET /UNIT2/off") >= 0) {
                Serial.println("Unit 2 off");
                unit2 = "off";
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc
            
            } else if (header.indexOf("GET /UNIT3/retrieve") >= 0) {
                Serial.println("Unit 3 Retrieving...");
                unit3 = "retrieve";
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc;

            } else if (header.indexOf("GET /UNIT3/store/on") >= 0) {
                Serial.println("Unit 3 Storing...");
                unit3 = "store";
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc

            } else if (header.indexOf("GET /UNIT3/off") >= 0) {
                Serial.println("Unit 3 off");
                unit3 = "off";
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc

            } else if (header.indexOf("GET /UNIT4/retrieve") >= 0) {
                Serial.println("Unit 4 Retrieving...");
                unit4 = "retrieve";
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc;

            } else if (header.indexOf("GET /UNIT4/store") >= 0) {
                Serial.println("Unit 4 Storing...");
                unit4 = "store";
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc

            } else if (header.indexOf("GET /UNIT4/off") >= 0) {
                Serial.println("Unit 3 off");
                unit3 = "off";
                //digitalWrite(,);
                //analogWrite(,);
                //delay(..); etc

            }

// HTML set-up stuff

client.println("<!DOCTYPE html>");
client.println("<html>");
client.println("<head>");
client.println("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">");
client.println("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>");
client.println("<link href=\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\" rel=\"stylesheet\">");
client.println("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
client.println("<link rel=\"icon\" href=\"data:,\">");
client.println("<style>");
client.println("html { font-family: \"Press Start 2P\"; display: inline-block; margin: 0px auto; text-align: center;}");
client.println(".text {position: absolute; top: 5%; left: 10%; font-size: 15px;}");
client.println(".button { background-color: #0036b5; border: none; color: white; width: 150px; height: 50px; text-decoration: none; font-family: \"Press Start 2P\"; font-size: 10px; margin: 2px; cursor: pointer;}");
client.println(".button2 { background-color: #980000;}");
client.println(".content {");
client.println("    width: 200px;");
client.println("    height: 200px;");
client.println("    border: 8px solid #c3c3c3;");
client.println("    display: flex;");
client.println("    justify-content: center;");
client.println("    margin: auto;");
client.println("    gap: 10px;");
client.println("    gap: 10px 10px; /* row-gap column gap */");
client.println("    row-gap: 10px;");
client.println("    column-gap: 20px;");
client.println("}");
client.println("#col-rev {flex-direction: column-reverse;}");
client.println("#row-rev {flex-direction: row-reverse;}");
client.println(".red {background-color: red;}");
client.println(".lightblue {background-color: lightblue;}");
client.println(".yellow {background-color: yellow;}");
client.println(".press-start-2p-regular {");
client.println("    font-family: \"Press Start 2P\", system-ui;");
client.println("    font-weight: 400;");
client.println("    font-style: normal;");
client.println("}");
client.println("#flexbox {");
client.println("    display: flex;");
client.println("    flex-wrap: wrap;");
client.println("    flex-flow: row;");
client.println("    row-gap: 20px;");
client.println("}");
client.println("#flexbox1 {");
client.println("    display: flex;");
client.println("    flex-wrap: wrap;");
client.println("    flex-flow: column;");
client.println("    column-gap: 20px;");
client.println("    justify-self: center;");
client.println("}");
client.println("#flexbox2 {");
client.println("    display: flex;");
client.println("    flex-wrap: wrap;");
client.println("    flex-flow: column;");
client.println("    column-gap: 10px;");
client.println("}");
client.println(".spacer{");
client.println("    padding-bottom: 20px;");
client.println("    font-size: 10px;");
client.println("}");
client.println("</style>");
client.println("<title>ACRS(TEAM7)</title>");
client.println("</head>");
client.println("<body>");

    //heading
        client.println("<h1>Control System</h1>");
        client.println("<p class=\"spacer\"> By Maya, Katie, Jona, Gabbie, Chelsea, Honey</p>");

    //formatting

        client.println("<div id=\"flexbox1\">");

        client.println( "<div id=\"flexbox\">");

    //UNIT 1
        
        client.println(     "<div id=\"flexbox2\" class=\"content\">");
        client.println(         "<p>UNIT 1</span></p>");
                                if (unit1 =="retrieve"){
                                    // button3 indicates operation
        client.println(         "<p><a href=\"/unit1/retrieve\"><button class=\"button button3\">RETRIEVE</button></a>");
        client.println(         "<button class=\"button button2\">STORE</button></p>");
                                }   else if (unit1 == "store"){
        client.println(         "<p><button class=\"button\">RETRIEVE</button>");
        client.println(         "<a href=\"/unit1/store\"><button class=\"button button3\">STORE</button></a></p>");
                                }   else {
        client.println(             "<p><a href=\"/unit1/off\"><button class=\"button\">RETRIEVE</button></a>");
        client.println(             "<button class=\"button button2\">STORE</button></p>");
                                        }        
        client.println(     "</div>");

    //UNIT 2

        client.println(     "<div id=\"flexbox2\" class=\"content\">");
        client.println(         "<p>UNIT 2</span></p>");
                                if (unit2 =="retrieve"){
                                    // button3 indicates operation
        client.println(         "<p><a href=\"/unit2/retrieve\"><button class=\"button button3\">RETRIEVE</button></a>");
        client.println(         "<button class=\"button button2\">STORE</button></p>");
                                }   else if (unit2 == "store"){
        client.println(         "<p><button class=\"button\">RETRIEVE</button>");
        client.println(         "<a href=\"/unit2/store\"><button class=\"button button3\">STORE</button></a></p>");
                                }   else {
        client.println(             "<p><a href=\"/unit2/off\"><button class=\"button\">RETRIEVE</button></a>");
        client.println(             "<button class=\"button button2\">STORE</button></p>");
                                        }        
        client.println(     "</div>");

    //formatting

    `   client.println("</div>")
        
        client.println( "<div id=\"flexbox\">");

    //UNIT 3

        client.println(     "<div id=\"flexbox2\" class=\"content\">");
        client.println(         "<p>UNIT 3</span></p>");
                                if (unit3 =="retrieve"){
                                    // button3 indicates operation
        client.println(         "<p><a href=\"/unit3/retrieve\"><button class=\"button button3\">RETRIEVE</button></a>");
        client.println(         "<button class=\"button button2\">STORE</button></p>");
                                }   else if (unit3 == "store"){
        client.println(         "<p><button class=\"button\">RETRIEVE</button>");
        client.println(         "<a href=\"/unit3/store\"><button class=\"button button3\">STORE</button></a></p>");
                                }   else {
        client.println(             "<p><a href=\"/unit3/off\"><button class=\"button\">RETRIEVE</button></a>");
        client.println(             "<button class=\"button button2\">STORE</button></p>");
                                        }        
        client.println(     "</div>");

    //UNIT 4

        client.println(     "<div id=\"flexbox2\" class=\"content\">");
        client.println(         "<p>UNIT 4</span></p>");
                                if (unit4 =="retrieve"){
                                    // button3 indicates operation
        client.println(         "<p><a href=\"/unit4/retrieve\"><button class=\"button button3\">RETRIEVE</button></a>");
        client.println(         "<button class=\"button button2\">STORE</button></p>");
                                }   else if (unit4 == "store"){
        client.println(         "<p><button class=\"button\">RETRIEVE</button>");
        client.println(         "<a href=\"/unit4/store\"><button class=\"button button3\">STORE</button></a></p>");
                                }   else {
        client.println(             "<p><a href=\"/unit4/off\"><button class=\"button\">RETRIEVE</button></a>");
        client.println(             "<button class=\"button button2\">STORE</button></p>");
                                        }        
        client.println(     "</div>");
    
    //formatting

        client.println("</div>");
`   
        client.println("</body></html>");

        / The HTTP response ends with another blank line
            client.println();
            // Break out of the while loop
            break;
          } else { // if you got a newline, then clear currentLine
            currentLine = "";
          }
    } else if (c != '\r') {  // if you got anything else but a carriage return character,
          currentLine += c;      // add it to the end of the currentLine
        }
      }
    }
    // Clear the header variable
    header = "";
    // Close the connection
    client.stop();
    Serial.println("Client disconnected.");
    Serial.println("");
  }
} 

        


    
        
        
        
            


            
